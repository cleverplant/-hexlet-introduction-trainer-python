# functions and their invocation
# функции и их вызов

'''
Сложение, конкатенация, нахождение остатка от деления и 
остальные рассмотренные операции – все это довольно базовые возможности языков 
программирования. Математика не ограничена арифметикой, 
кроме нее есть и множество других разделов со своими операциями, 
например, геометрия. 
То же самое касается и строк: их можно переворачивать, 
менять регистр букв, удалять лишние символы — и это только самое простое. 
И, наконец, на более высоком уровне есть прикладная логика конкретного приложения. 
Программы списывают деньги, считают налоги, формируют отчеты. 
Количество подобных операций бесконечно и индивидуально для каждой программы. 
И все они должны быть как-то выражены в коде.

Для выражения любой произвольной операции в программировании существует понятие функция. 
Функции бывают как встроенные, так и добавленные программистом. 
С одной встроенной функцией мы уже знакомы, это print().

Функции — одна из ключевых конструкций в программировании, 
без них невозможно сделать практически ничего. 
Знакомство с ними мы начинаем как можно раньше, 
так как весь дальнейший материал оперирует функциями по максимуму. 
Сначала мы научимся пользоваться уже созданными функциями, 
а уже потом научимся создавать свои собственные.'''

# Начнём с простых функций для работы над строками. 
# Ниже пример вызова функции len(), которая считает количество символов в строке:

# Вызов функции len с параметром 'Hello!'
result = len('Hello!')
print(result)  # => 6

'''Параметры (или аргументы) — это информация, которую функция получает при вызове. 
Именно на основе этой информации функция, как правило, 
вычисляет что-то и выдает результат.

Мы создали переменную result и указали интерпретатору записать в неё результат, 
возвращаемый функцией len() при её вызове. В этом смысле функции подобны операциям 
- они всегда возвращают результат своей работы. 
Запись len('Hello!') означает, что вызывается функция с именем len, 
в которую был передан параметр 'Hello!'. 
Функция len() считает длину именно той строки, которая ей была передана.

Вызов функции всегда обозначается скобками (), идущими сразу за именем функции. 
В скобках может быть любое количество параметров, а иногда — вообще ни одного. 
Количество зависит от используемой функции. 
Возьмем для примера функцию pow(), которая возводит указанное число в нужную степень. 
Она принимает на вход два параметра и возводит число, переданное первым параметром, 
в степень, переданную вторым параметром.'''

result = pow(2, 3)  # 2 * 2 * 2
print(result)  # => 8

# Вопрос на самопроверку. Как узнать, что возвращает вызов print()? Проверьте.







