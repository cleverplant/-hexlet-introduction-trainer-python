# Deeper modules
# Модули поглубже

'''=========================================================================================
Вопрос: 3 из 3. 
Пусть у нас есть модуль chemicals. 
Он содержит определения констант, описывающих химические соединения в текстовой форме 
(например, SULFURIC_ACID), константы, соответствующие химическим элементам (HYDROGEN и т.п.), 
и несколько функций.

Предположим, что блок импортов для этого модуля в нашем коде выглядит так:
'''
# import chemicals
# from chemicals import WATER, HYDROGEN
# from chemicals import contains
'''
Укажите, какие строчки кода верно используют импортированные данные:
(нужно выбрать все корректные ответы)

  print(chemicals.SULFURIC_ACID)
  print(WATER)
  print(chemicals.contains(HYDROGEN))'''
# print(contains(WATER, SULPHUR))
# print(contains(chemicals.SULFURIC_ACID, SULPHUR))

'''==============================================================================
Вопрос: 1 из 3.
Где в коде своего модуля следует стараться располагать блок импортов?

  В начале модуля'''
# В конце модуля
# В середине модуля
# Непосредственно перед использованием импортируемых определений'''

'''==============================================================================
Вопрос: 2 из 3.
Предположим, что нам нужно из модуля pets импортировать пару констант, 
а именно DOG и CAT. Мы можем это сделать

  Допустимы оба варианта'''

# Только по одной константе за раз

# from pets import DOG
# from pets import CAT

# Только обе сразу

# from pets import CAT, DOG'''

print('===  src/solution.py  ===')
# Директория src в файловом дереве содержит модуль kit.py. Изучите его.
'''
Реализуйте функцию print_kit() и вызовите в ней все функции, которые определены в модуле kit.py. 
Предварительно импортируйте их.
'''
print('\noption_1\n')
# 1. Импорт модуля целиком:
# используем ключевое слово import вместе с названием файла без расширения .py

import kit
option_1 = kit.show_language()
def print_kit():
    return print(option_1) # вызываем функцию модуля

# 2. Импорт отдельных определений
# второй способ импорта: нужно написать ключевое слово from с названием модуля без расширения .py. 
# Затем в той же строке указываем ключевое слово import с названием определений, которые хотим использовать. 
print('\noption_2 \n')

from kit import say_hello
option_2 = say_hello()
def print_kit():
    return print(option_2)
   
# 3. Импорт всего содержимого модуля (следующее упражнение)
print('\noption_3 \n')

from kit import *
option_3 = say_bye()
def print_kit():
    return print(option_3)

    

from kit import say_bye, say_hello, show_language

print('идиотсккие формулировки. и все таки я решил правильно!!!')

def print_kit():
    say_hello()
    show_language()
    say_bye()
print_kit()


