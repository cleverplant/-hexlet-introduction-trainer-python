# src/solution.py
'''В Python есть функция abs(). Изучите её сигнатуру на странице документации.

Напишите программу, которая использует функцию abs() 
и выводит на экран модуль суммы двух переменых num1 и num2.'''

num1 = 10
num2 = -13
print(num1 + abs(num2)) # => 23
print(abs(num1) + abs(num2)) # => 23
# я непонял что такое модуль. а это оказывается 
# не просто сумма двух значений: abs(num1) + abs(num2) 
# модуль - это сумма  abs(num1 + num2)
print(abs(num1 + num2)) # => 3 - this is the right decision 

# num2 = abs(num2)
# print(num1 + num2) <= но так лучше не делать, потому что изменять переменную
# в программе не принято, могут быть баги. менять переменную можно в циклах.
'''
Мы не изменили число, мы изменили переменную — 
записали в неё новое число вместо старого. 
Изменение уже существующей переменной может показаться безобидным действием. 
Но в реальных программах переписывание переменной становится источником проблем. 
Код с изменяемыми переменными сложно понимать и анализировать: 
никогда нельзя быть уверенным, какое значение будет у переменной в какой-то момент времени.

Вы наверняка регулярно сталкиваетесь с багами и ошибками в приложениях, 
которые используете. Многие вызваны именно обилием изменяемых переменных: 
такие ошибки сложно найти и исправить. Единственное место, где без переменных никак 
— это циклы, с которыми мы познакомимся позже. 
Во всех остальных местах относитесь к переменным как к константам 
— неизменяемым сущностям. 
Создавайте переменные, задавайте им значение и больше не меняйте.
'''
# BEGIN (write your solution here)

# print(num1 + abs(num2))
print(round(10.25, 0))  # 10.0 
print(round(10.25, 1))  # 10.2 
# END
